Index: DeleteEM.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/DeleteEM.php b/DeleteEM.php
new file mode 100644
--- /dev/null	(date 1698698882077)
+++ b/DeleteEM.php	(date 1698698882077)
@@ -0,0 +1,20 @@
+<?php
+if($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST["delete"])) {
+    $material_id = $_POST["materialid"];
+}
+?>
+<!DOCTYPE html>
+<html>
+<head>
+    <meta charset = "utf-8">
+    <title>Delete Educational Material</title>
+</head>
+<body>
+<form method="POST" action="">
+    <input type="hidden" name="operation" value="delete">
+    <label for="materialid">EM ID:</label>
+    <input type="text" id="materialid" name="materialid" value="<?php echo $material_id; ?>"<br>
+    <input type="submit" name="delete" value="Delete">
+</form>
+</body>
+</html>
Index: MossDB Commands
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/MossDB Commands b/MossDB Commands
new file mode 100644
--- /dev/null	(date 1698237023686)
+++ b/MossDB Commands	(date 1698237023686)
@@ -0,0 +1,92 @@
+// Commands used to create Moss CLinc Database Tables
+CREATE TABLE userdb(
+    userid INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
+    username VARCHAR(50),
+    password VARCHAR(50),
+    last_login DATE,
+    user_type VARCHAR(50)
+    );
+
+CREATE TABLE emdb(
+    materialid INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
+    name VARCHAR(50),
+    upload_date DATETIME,
+    uploaded_by INT NOT NULL,
+    file_type VARCHAR(50),
+    description BLOB,
+    upload_file_path VARCHAR(50),
+    CONSTRAINT uploaded_by_fk
+    FOREIGN KEY (uploaded_by)
+    REFERENCES userdb (userid)
+    );
+
+CREATE TABLE em_tagdb(
+    materialid INT NOT NULL,
+    tag_id INT NOT NULL,
+    CONSTRAINT materialid_fk
+    FOREIGN KEY (materialid)
+    REFERENCES emdb (materialid),
+    CONSTRAINT tag_id
+    FOREIGN KEY (tag_id)
+    REFERENCES tagdb (tag_id)
+    );
+
+CREATE TABLE tagdb(
+    tag_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
+    tag_name VARCHAR(50)
+    );
+
+CREATE TABLE categorydb(
+    category_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
+    category_name VARCHAR(50)
+    );
+
+CREATE TABLE em_categorydb(
+    materialid INT,
+    category_id INT,
+    CONSTRAINT material_id_fk
+    FOREIGN KEY (materialid)
+    REFERENCES emdb (materialid),
+    CONSTRAINT category_id_fk
+    FOREIGN KEY (category_id)
+    REFERENCES categorydb (category_id)
+    );
+
+CREATE TABLE surveydb(
+    survey_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
+    survey_date DATETIME
+    );
+
+CREATE TABLE survey_questiondb(
+    survey_id INT,
+    question_id INT,
+    CONSTRAINT survey_id_fk
+    FOREIGN KEY (survey_id)
+    REFERENCES surveydb (survey_id),
+    CONSTRAINT question_id_fk
+    FOREIGN KEY (question_id)
+    REFERENCES questiondb (question_id)
+    );
+
+CREATE TABLE questiondb(
+    question_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
+    question_type VARCHAR(50),
+    question BLOB
+    );
+
+CREATE TABLE question_responsedb(
+    question_id INT,
+    response_id INT,
+    CONSTRAINT questionid_fk
+    FOREIGN KEY (question_id)
+    REFERENCES questiondb (question_id),
+    CONSTRAINT response_id_fk
+    FOREIGN KEY (response_id)
+    REFERENCES survey_responsedb (response_id)
+    );
+
+CREATE TABLE survey_responsedb(
+    response_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
+    response_date DATETIME,
+    survey_response_value INT(11)
+    );
